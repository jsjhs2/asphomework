// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolManagementApp.Models;

namespace SchoolManagementApp.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20250624160332_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SchoolManagementApp.Models.Classes", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClassCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeacherName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClassId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            ClassCode = "CS1",
                            ClassName = "计算机一班",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 3, 32, 453, DateTimeKind.Local).AddTicks(8359),
                            TeacherName = "张老师"
                        },
                        new
                        {
                            ClassId = 2,
                            ClassCode = "MATH1",
                            ClassName = "数学一班",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 3, 32, 455, DateTimeKind.Local).AddTicks(1925),
                            TeacherName = "李老师"
                        },
                        new
                        {
                            ClassId = 3,
                            ClassCode = "ENG1",
                            ClassName = "英语一班",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 3, 32, 455, DateTimeKind.Local).AddTicks(1945),
                            TeacherName = "王老师"
                        },
                        new
                        {
                            ClassId = 4,
                            ClassCode = "PHY1",
                            ClassName = "物理一班",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 3, 32, 455, DateTimeKind.Local).AddTicks(1949),
                            TeacherName = "赵老师"
                        },
                        new
                        {
                            ClassId = 5,
                            ClassCode = "CHEM1",
                            ClassName = "化学一班",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 3, 32, 455, DateTimeKind.Local).AddTicks(1951),
                            TeacherName = "钱老师"
                        },
                        new
                        {
                            ClassId = 6,
                            ClassCode = "BIO1",
                            ClassName = "生物一班",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 3, 32, 455, DateTimeKind.Local).AddTicks(1953),
                            TeacherName = "孙老师"
                        },
                        new
                        {
                            ClassId = 7,
                            ClassCode = "HIST1",
                            ClassName = "历史一班",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 3, 32, 455, DateTimeKind.Local).AddTicks(1954),
                            TeacherName = "周老师"
                        },
                        new
                        {
                            ClassId = 8,
                            ClassCode = "LAW1",
                            ClassName = "法学一班",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 3, 32, 455, DateTimeKind.Local).AddTicks(1957),
                            TeacherName = "吴老师"
                        },
                        new
                        {
                            ClassId = 9,
                            ClassCode = "ART1",
                            ClassName = "艺术一班",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 3, 32, 455, DateTimeKind.Local).AddTicks(1960),
                            TeacherName = "郑老师"
                        },
                        new
                        {
                            ClassId = 10,
                            ClassCode = "PE1",
                            ClassName = "体育一班",
                            CreatedDate = new DateTime(2025, 6, 25, 0, 3, 32, 455, DateTimeKind.Local).AddTicks(1970),
                            TeacherName = "王五"
                        });
                });

            modelBuilder.Entity("SchoolManagementApp.Models.Course", b =>
                {
                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Credit")
                        .HasColumnType("float");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseCode");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseCode = "CS101",
                            CourseName = "计算机基础",
                            Credit = 3.0,
                            Department = "计算机学院"
                        },
                        new
                        {
                            CourseCode = "MATH201",
                            CourseName = "高等数学",
                            Credit = 4.0,
                            Department = "数学学院"
                        },
                        new
                        {
                            CourseCode = "ENG301",
                            CourseName = "大学英语",
                            Credit = 2.0,
                            Department = "外国语学院"
                        },
                        new
                        {
                            CourseCode = "PHY101",
                            CourseName = "大学物理",
                            Credit = 3.5,
                            Department = "物理学院"
                        },
                        new
                        {
                            CourseCode = "CHEM101",
                            CourseName = "基础化学",
                            Credit = 3.0,
                            Department = "化学学院"
                        },
                        new
                        {
                            CourseCode = "BIO101",
                            CourseName = "生物科学",
                            Credit = 2.5,
                            Department = "生命科学学院"
                        },
                        new
                        {
                            CourseCode = "HIST101",
                            CourseName = "中国历史",
                            Credit = 2.0,
                            Department = "历史学院"
                        },
                        new
                        {
                            CourseCode = "LAW101",
                            CourseName = "法学导论",
                            Credit = 2.0,
                            Department = "法学院"
                        },
                        new
                        {
                            CourseCode = "ART101",
                            CourseName = "艺术鉴赏",
                            Credit = 1.5,
                            Department = "艺术学院"
                        },
                        new
                        {
                            CourseCode = "PE101",
                            CourseName = "体育",
                            Credit = 1.0,
                            Department = "体育学院"
                        });
                });

            modelBuilder.Entity("SchoolManagementApp.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Score")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            Score = 85m,
                            StudentId = 1,
                            Subject = "计算机基础"
                        },
                        new
                        {
                            GradeId = 2,
                            Score = 90m,
                            StudentId = 2,
                            Subject = "高等数学"
                        },
                        new
                        {
                            GradeId = 3,
                            Score = 88m,
                            StudentId = 3,
                            Subject = "大学英语"
                        },
                        new
                        {
                            GradeId = 4,
                            Score = 92m,
                            StudentId = 4,
                            Subject = "大学物理"
                        },
                        new
                        {
                            GradeId = 5,
                            Score = 80m,
                            StudentId = 5,
                            Subject = "基础化学"
                        },
                        new
                        {
                            GradeId = 6,
                            Score = 87m,
                            StudentId = 6,
                            Subject = "生物科学"
                        },
                        new
                        {
                            GradeId = 7,
                            Score = 78m,
                            StudentId = 7,
                            Subject = "中国历史"
                        },
                        new
                        {
                            GradeId = 8,
                            Score = 91m,
                            StudentId = 8,
                            Subject = "法学导论"
                        },
                        new
                        {
                            GradeId = 9,
                            Score = 95m,
                            StudentId = 9,
                            Subject = "艺术鉴赏"
                        },
                        new
                        {
                            GradeId = 10,
                            Score = 98m,
                            StudentId = 10,
                            Subject = "体育"
                        });
                });

            modelBuilder.Entity("SchoolManagementApp.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RollNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            ClassId = 1,
                            DateOfBirth = new DateTime(2005, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "男",
                            Name = "小明",
                            RollNumber = "2023001"
                        },
                        new
                        {
                            StudentId = 2,
                            ClassId = 2,
                            DateOfBirth = new DateTime(2005, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "女",
                            Name = "小红",
                            RollNumber = "2023002"
                        },
                        new
                        {
                            StudentId = 3,
                            ClassId = 3,
                            DateOfBirth = new DateTime(2005, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "男",
                            Name = "小刚",
                            RollNumber = "2023003"
                        },
                        new
                        {
                            StudentId = 4,
                            ClassId = 4,
                            DateOfBirth = new DateTime(2005, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "女",
                            Name = "小丽",
                            RollNumber = "2023004"
                        },
                        new
                        {
                            StudentId = 5,
                            ClassId = 5,
                            DateOfBirth = new DateTime(2005, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "男",
                            Name = "小强",
                            RollNumber = "2023005"
                        },
                        new
                        {
                            StudentId = 6,
                            ClassId = 6,
                            DateOfBirth = new DateTime(2005, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "女",
                            Name = "小芳",
                            RollNumber = "2023006"
                        },
                        new
                        {
                            StudentId = 7,
                            ClassId = 7,
                            DateOfBirth = new DateTime(2005, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "男",
                            Name = "小军",
                            RollNumber = "2023007"
                        },
                        new
                        {
                            StudentId = 8,
                            ClassId = 8,
                            DateOfBirth = new DateTime(2005, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "女",
                            Name = "小燕",
                            RollNumber = "2023008"
                        },
                        new
                        {
                            StudentId = 9,
                            ClassId = 9,
                            DateOfBirth = new DateTime(2005, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "男",
                            Name = "小鹏",
                            RollNumber = "2023009"
                        },
                        new
                        {
                            StudentId = 10,
                            ClassId = 10,
                            DateOfBirth = new DateTime(2005, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "女",
                            Name = "小玉",
                            RollNumber = "2023010"
                        });
                });

            modelBuilder.Entity("SchoolManagementApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DisplayName = "系统管理员",
                            PasswordHash = "jZae727K08KaOmKSgOaGzww/XVqGr/PKEgIMkjrcbJI=",
                            Role = "Admin",
                            Username = "sys"
                        });
                });

            modelBuilder.Entity("SchoolManagementApp.Models.Grade", b =>
                {
                    b.HasOne("SchoolManagementApp.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolManagementApp.Models.Student", b =>
                {
                    b.HasOne("SchoolManagementApp.Models.Classes", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("SchoolManagementApp.Models.Classes", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
